/*
*Learn-2-Math team:
 *  Eric Sullivan
 *  Tauseef Pirzada
 *  Leonid Melnikov
 *
 * Date Produced:
 *  4/2/15 - 4/30/15
 *
 *  Purpose of project:
 *The purpose of the project was to create a software that could be used by 
 *children aged 3-10 in Pre-k to Grade 4. The software is a Math tutoring software 
 *that will teach kids number sense and other important skills that they will use 
 *throughout life. Our goal was that the software be easy to learn because our clients 
 *would be mostly children, and that it helped teach the important concepts that they are
 *supposed to learn in each grade. This is meant to be a supplement to schoolwork and helps 
 *reinforce concepts that are learned in the class room. 
 */
package mathtutor;

import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.util.ArrayList;
import javax.swing.*;
import java.sql.*;
import java.util.Stack;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.LineEvent;
import javax.sound.sampled.LineListener;

/**
 * This is the program Frame and main.
 * It Contains:
 * The first Jpanel that is added to the JFrame.
 * A List of all the Panel before the current panel
 * the CurrentPanel
 * @author Eric Sullivan
 */
public class Login extends javax.swing.JFrame {

    /**
     * The Constructor sets up the frames default size and setting.
     * Then generates the select user panel that is added to the frame
     * Creates new form Login
     */
    public Login() {
        setPreferredSize(new Dimension(800,620));
        initComponents();
        frame = this;
        lastPane = new Stack<>();
        currentPane = mainPane;
        loadAccounts();
        //card layout for the middle panels
        cl = new CardLayout();
        accountPane.setLayout(cl);
        //icons for the bottom buttons
        back.setIcon(new ImageIcon(".\\Icons\\Icons\\Buttons\\back.png"));
        next.setIcon(new ImageIcon(".\\Icons\\Icons\\Buttons\\forward.png"));
        logout.setIcon(new ImageIcon(".\\Icons\\Icons\\Buttons\\quit.png"));
        help.setIcon(new ImageIcon(".\\Icons\\Icons\\Buttons\\help.png"));
        // Action Listener
        back.addMouseListener(new NextPrev());
        next.addMouseListener(new NextPrev());
        logout.addMouseListener(new NextPrev());
        help.addMouseListener(new NextPrev());
        
        setUpClip();
        
        setLocationRelativeTo(null);
        setResizable(false);
        
    }
    /**
     * gets the Current Pane
     * @return JComponent
     */
    public JComponent getCurrentPane() {
        return currentPane;
    }
    /**
     * sets the currentPane
     * @param currentPane 
     */
    public void setCurrentPane(JComponent currentPane) {
        this.currentPane = currentPane;
    }
    /**
     * gets the LastPane stack
     * @return Stack<JComponent>
     */
    public Stack<JComponent> getLastPane() {
        return lastPane;
    }

    public AccountPanel getAccountPanel() {
        return accountPanel;
    }

    public void setAccountPanel(AccountPanel accountPanel) {
        this.accountPanel = accountPanel;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPane = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        accountPane = new javax.swing.JPanel();
        backPane = new javax.swing.JPanel();
        back = new javax.swing.JLabel();
        nextPane = new javax.swing.JPanel();
        next = new javax.swing.JLabel();
        logoutPane = new javax.swing.JPanel();
        logout = new javax.swing.JLabel();
        helpPane = new javax.swing.JPanel();
        help = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPane.setBackground(new java.awt.Color(144, 210, 144));

        title.setFont(new java.awt.Font("Comic Sans MS", 1, 50)); // NOI18N
        title.setForeground(java.awt.Color.white);
        title.setText("Select User");

        accountPane.setBackground(java.awt.Color.white);
        accountPane.setPreferredSize(new java.awt.Dimension(600, 300));

        javax.swing.GroupLayout accountPaneLayout = new javax.swing.GroupLayout(accountPane);
        accountPane.setLayout(accountPaneLayout);
        accountPaneLayout.setHorizontalGroup(
            accountPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        accountPaneLayout.setVerticalGroup(
            accountPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        backPane.setBackground(new java.awt.Color(144, 210, 144));

        back.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout backPaneLayout = new javax.swing.GroupLayout(backPane);
        backPane.setLayout(backPaneLayout);
        backPaneLayout.setHorizontalGroup(
            backPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backPaneLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        backPaneLayout.setVerticalGroup(
            backPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(back, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
        );

        nextPane.setBackground(new java.awt.Color(144, 210, 144));

        next.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        next.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        next.setPreferredSize(new java.awt.Dimension(30, 15));

        javax.swing.GroupLayout nextPaneLayout = new javax.swing.GroupLayout(nextPane);
        nextPane.setLayout(nextPaneLayout);
        nextPaneLayout.setHorizontalGroup(
            nextPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, nextPaneLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        nextPaneLayout.setVerticalGroup(
            nextPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(next, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
        );

        logoutPane.setBackground(new java.awt.Color(144, 210, 144));

        logout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout logoutPaneLayout = new javax.swing.GroupLayout(logoutPane);
        logoutPane.setLayout(logoutPaneLayout);
        logoutPaneLayout.setHorizontalGroup(
            logoutPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, logoutPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logout, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                .addContainerGap())
        );
        logoutPaneLayout.setVerticalGroup(
            logoutPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
        );

        helpPane.setBackground(new java.awt.Color(144, 210, 144));

        help.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout helpPaneLayout = new javax.swing.GroupLayout(helpPane);
        helpPane.setLayout(helpPaneLayout);
        helpPaneLayout.setHorizontalGroup(
            helpPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(helpPaneLayout.createSequentialGroup()
                .addComponent(help, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                .addContainerGap())
        );
        helpPaneLayout.setVerticalGroup(
            helpPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, helpPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(help, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout mainPaneLayout = new javax.swing.GroupLayout(mainPane);
        mainPane.setLayout(mainPaneLayout);
        mainPaneLayout.setHorizontalGroup(
            mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPaneLayout.createSequentialGroup()
                .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPaneLayout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addComponent(title)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(mainPaneLayout.createSequentialGroup()
                        .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(mainPaneLayout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(accountPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(mainPaneLayout.createSequentialGroup()
                                .addComponent(helpPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(backPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nextPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logoutPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        mainPaneLayout.setVerticalGroup(
            mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPaneLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(title)
                .addGap(88, 88, 88)
                .addComponent(accountPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPaneLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(backPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nextPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(mainPaneLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(logoutPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(helpPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // <editor-fold defaultstate="collapsed" desc="loadAccounts">   
    
    /**
     * This method makes a connection to the database and gets all the current users.
     * Creates a Array list of accountPanels and adds mouseListeners to the panels
     */
    public void loadAccounts() {
        accountPanels = new ArrayList<>();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/MathTutorDB", "TutorAdmin", "Tut0r4dm1n"); //change password for it to work.
            String sql = "select * from Users";
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            //set up for build of the mid or userSwitchPane
            String name;
            String icon;
            int page = 0;
            userSwitchPane usp = new userSwitchPane();

            while (rs.next()) {
                name = rs.getString("PID");
                icon = rs.getString("Icon");
                accountPanelForm apf = new accountPanelForm(name, icon);
                apf.addMouseListener(new AccountListener());
                accountPanels.add(apf);
            }

            accountPanels.add(new accountPanelForm("New Account", ".\\Icons\\Icons\\Icons\\new.png"));
            accountPanels.get(accountPanels.size() - 1).addMouseListener(new NewAccountListener());
            if (accountPanels.size() % 4 != 0) {
                int needed = 4 - accountPanels.size() % 4;
                for (int x = 0; x < needed; x++) {
                    JPanel temp = new JPanel();
                    temp.setBackground(new Color(144, 210, 144));
                    accountPanels.add(temp);
                }
            }
            
            for (int i = 0; i < accountPanels.size(); i++) {
                usp.add(accountPanels.get(i));
                accountPane.add(usp);
                if (i % 4 == 3 && i != 0) {
                    accountPane.add(usp);
                    usp = new userSwitchPane();
                }
            }

        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }
    // </editor-fold>

    
    // <editor-fold defaultstate="collapsed" desc="NewAccountListener">
    /**
     * MouseAdapter for the new account button that clears the current panel and adds a CreateNewUser to the frame
     */
    public class NewAccountListener extends MouseAdapter {
        
        public void mouseClicked(MouseEvent e){
            getContentPane().removeAll();
            setLayout(new GridLayout(1,1));
            lastPane.push(currentPane);
            currentPane = new CreateNewUserLayer(frame);
            getContentPane().add(currentPane);
            repaint();
            pack();
        }
    }
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="AccountListener">
    /**
     * MouseAdapter for the Account Panels that changes their color if they are hovered over by the mouse and if click creates and adds a PassEntrypane to the JFrame
     */
    public class AccountListener extends MouseAdapter {

        public void mouseEntered(MouseEvent e) {
            ((accountPanelForm)e.getSource()).setBackground(new Color(255, 150, 15));
        }
        public void mouseExited(MouseEvent e) {
            ((accountPanelForm)e.getSource()).setBackground(Color.GREEN);
        }
        public void mouseClicked(MouseEvent e) {
            clipStop();
            getContentPane().removeAll();
            getContentPane().setLayout(new GridLayout(1,1));
            lastPane.push(currentPane);
            currentPane = new PassEntryLayer(((accountPanelForm) e.getSource()).getJLabelName(), ((accountPanelForm) e.getSource()).getJLabelIcon(),frame);
            getContentPane().add(currentPane);
            repaint();
            pack();
        }
    }
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="CardLayout Listener">
    /**
     * MouseAdapter for the back and forth buttons of the AccountPanels
     */
    public class NextPrev extends MouseAdapter {
        public void mouseClicked(MouseEvent e){
            if(e.getSource()==back){
                cl.previous(accountPane);
            }
            if(e.getSource()==next){
                cl.next(accountPane);
            }
            if(e.getSource()==logout){
                System.exit(0);
            }
            if(e.getSource()==help){
                help();
            }
        }
        public void mouseEntered(MouseEvent e) {
            if(e.getSource()==back){
            backPane.setBackground(new Color(255, 150, 15));
            }
            if(e.getSource()==next){
            nextPane.setBackground(new Color(255, 150, 15));
            }
            if(e.getSource()==logout){
            logoutPane.setBackground(new Color(255, 150, 15));
            }
            if(e.getSource()==help){
            helpPane.setBackground(new Color(255, 150, 15));
            }
        }
        public void mouseExited(MouseEvent e) {
            if(e.getSource()==back){
            backPane.setBackground(new Color(144, 210, 144));
            }
            if(e.getSource()==next){
            nextPane.setBackground(new Color(144, 210, 144));
            }
            if(e.getSource()==logout){
            logoutPane.setBackground(new Color(144, 210, 144));
            }
            if(e.getSource()==help){
            helpPane.setBackground(new Color(144, 210, 144));
            }
        }
        
                
                
        
    }// </editor-fold>
     public void setUpClip() {
        try {
            File yourFile = new File(".\\Help\\SelectUser.wav");
            AudioInputStream stream;
            AudioFormat format;
            DataLine.Info info;

            stream = AudioSystem.getAudioInputStream(yourFile);
            format = stream.getFormat();
            info = new DataLine.Info(Clip.class, format);
            clip = (Clip) AudioSystem.getLine(info);
            LineListener listener = new LineListener() {
                public void update(LineEvent e) {
                    if (e.getType() == LineEvent.Type.STOP) {
                        clip.close();
                        setUpClip();
                    }
                }
            };
            clip.addLineListener(listener);
            clip.open(stream);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
     }
    public void help() {
        try {
            if(clip.isRunning()){
            clip.stop();
            clip.close();
            setUpClip();
            }
            clip.start();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
    public void clipStop() {
        clip.stop();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }
    
    
    
    private Clip clip;
    private CardLayout cl;
    private Login frame;
    private ArrayList<JPanel> accountPanels;
    private JComponent currentPane;
    private Stack<JComponent> lastPane;
    private AccountPanel accountPanel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel accountPane;
    private javax.swing.JLabel back;
    private javax.swing.JPanel backPane;
    private javax.swing.JLabel help;
    private javax.swing.JPanel helpPane;
    private javax.swing.JLabel logout;
    private javax.swing.JPanel logoutPane;
    private javax.swing.JPanel mainPane;
    private javax.swing.JLabel next;
    private javax.swing.JPanel nextPane;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
